---
title: "Poisson Processes"
subtitle: "Counting in continuous time"
author: "Dr Joshua J Bon"
bibliography: refs.bib
format:
  revealjs:
    html-math-method: katex
    theme: default
    df-print: paged
    incremental: true 
    css: style.css
    chalkboard: true
editor: source
---


```{r setup, load_refs, include=FALSE, cache=FALSE}
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
library(RColorBrewer)
library(purrr)
library(distributional)
library(ggdist)


figdpi <- 96*3

```

## Lecture overview

::::: columns
::: {.column width="60%"}
-   Motivating example

-   Poisson Process

    -   Definition
    -   Properties
    -   Activity

-   Recap and extras
:::

::: {.column width="40%"}
![SimÃ©on Denis Poisson](imgs/poisson.jpg){fig-align="right"}
:::
:::::

# Motivating example

## Poisson's Cafe

-   Imagine you run a small coffee shop on Rundle Mall.

-   Frequency of customer arrivals determines staffing.

:::{.fragment}
::: callout-tip
## Coffee Shop Question 1

What is the probability of exceeding 20 customers during the first hour after opening?
:::
:::

:::{.fragment}
::: callout-tip
## Coffee Shop Question 2

After one customer arrives, what is the average time until the next customer arrives?
:::
:::

-   Not just coffee shops: Airports, call centres, any queues!

## 

::: callout-tip
## Coffee Shop Q1

What is the probability of exceeding 20 customers during the first hour after opening?
:::

# Poisson processes

## Recall: The Poisson Distribution

::: callout-note
## Definition: Poisson distribution

The random variable $X \in \mathbb{N}_0$ is called a Poisson random variable

with rate $\lambda > 0$ if

$$
\mathbb{P}(X = k) = p_\lambda(k) =\frac{\lambda^{k}e^{-\lambda}}{k!}, \quad k \in \mathbb{N}_0.
$$

We also say $X \sim \text{Pois}(\lambda)$ for short.
:::

- If $X \sim \text{Pois}(\lambda)$, then $E[X]=\lambda$

## The Poisson process

::: callout-note
## Definition: Poisson process

The counting process $\{N(t), t \in [0,\infty)\}$ is called a Poisson Process with rate $\lambda > 0$ if

1. $N(0)=0$,
2. $N(t)$ has independent increments, and
3. The number of arrivals in any interval of length $s$ is $\text{Pois}(\lambda s)$ distributed.

:::

## Visualising the Poisson process

```{r PPr1, echo=FALSE, fig.dpi=96*3, fig.cap='Process realisation 1', cache=TRUE}

simulate_pp <- function(time, lambda){
  inter_arrival_times <- c()
  last_time <- 0
  while (last_time < time) {
    next_arrival <- rexp(n = 1, rate = lambda)
    inter_arrival_times <- c(inter_arrival_times, next_arrival)
    last_time <- last_time + next_arrival
  }
  num_arrivals <- length(inter_arrival_times)-1
  arrival_times <- cumsum(inter_arrival_times[1:num_arrivals]) # remove last arrival
  data.frame(Time = c(0,arrival_times,time), Count = c(0:num_arrivals,num_arrivals))
}

# xxtitle <- expression(paste('Total customers, ',N(t)))
xxtitle <- 'Total customers'
yytitle <- expression(paste('Time, ',t))

total_time <- 10
rate <- 1
ylimits <- c(0,15)

data1 <- simulate_pp(total_time,rate)

ggplot() +
  geom_step(aes(x=Time,y=Count, colour = "Process value"), data = data1) +
  geom_point(aes(x=Time,y=Count, colour = "New arrival"), data = filter(data1, Time > 0 & Time < total_time )) +
  scale_y_continuous(xxtitle, breaks = breaks_pretty(), limits = ylimits) +
  scale_x_continuous(yytitle, breaks = breaks_pretty(), limits = c(0,10)) +
  scale_colour_manual ("", values = c("#E66100","#5D3A9B"), label = c("New arrival", expression(N(t)))) +
  theme_bw() +
  theme (text = element_text (size = 18))

```

## Visualising the Poisson process

```{r PPr2, echo=FALSE, fig.dpi=96*3, fig.cap='Process realisation 2', cache=TRUE}

data2 <- simulate_pp(total_time,rate)

ggplot() +
  geom_step(aes(x=Time,y=Count, colour = "Process value"), data = data2) +
  geom_point(aes(x=Time,y=Count, colour = "New arrival"), data = filter(data2, Time > 0 & Time < total_time )) +
  scale_y_continuous(xxtitle, breaks = breaks_pretty(), limits = ylimits) +
  scale_x_continuous(yytitle, breaks = breaks_pretty(), limits = c(0,10)) +
  scale_colour_manual ("", values = c("#E66100","#5D3A9B"), label = c("New arrival", expression(N(t)))) +
  theme_bw() +
  theme (text = element_text (size = 18))

```

## Visualising the Poisson process

```{r PPr3, echo=FALSE, fig.dpi=96*3, fig.cap='Process realisation 3', cache=TRUE}

data3 <- simulate_pp(total_time,rate)

ggplot() +
  geom_step(aes(x=Time,y=Count, colour = "Process value"), data = data3) +
  geom_point(aes(x=Time,y=Count, colour = "New arrival"), data = filter(data3, Time > 0 & Time < total_time )) +
  scale_y_continuous(xxtitle, breaks = breaks_pretty(), limits = ylimits) +
  scale_x_continuous(yytitle, breaks = breaks_pretty(), limits = c(0,10)) +
  scale_colour_manual ("", values = c("#E66100","#5D3A9B"), label = c("New arrival", expression(N(t)))) +
  theme_bw() +
  theme (text = element_text (size = 18))

```

## Visualising the Poisson process

```{r PPr4, echo=FALSE, fig.dpi=96*3, fig.cap='Process realisation 4', cache=TRUE}

data4 <- simulate_pp(total_time,rate)

ggplot() +
  geom_step(aes(x=Time,y=Count, colour = "Process value"), data = data4) +
  geom_point(aes(x=Time,y=Count, colour = "New arrival"), data = filter(data4, Time > 0 & Time < total_time )) +
  scale_y_continuous(xxtitle, breaks = breaks_pretty(), limits = ylimits) +
  scale_x_continuous(yytitle, breaks = breaks_pretty(), limits = c(0,10)) +
  scale_colour_manual ("", values = c("#E66100","#5D3A9B"), label = c("New arrival", expression(N(t)))) +
  theme_bw() +
  theme (text = element_text (size = 18))

```

## Visualising the Poisson process

```{r PPmean, echo=FALSE, fig.dpi=96*3, fig.cap='Process mean and realisations'}

data_all <- bind_rows(data1,data2,data3,data4,.id = "Realisation")
data_mean <- data.frame(Time=c(0,total_time),Count=c(0,total_time*rate))

allplot <- ggplot() +
  geom_step(aes(x=Time,y=Count, group = Realisation, colour = "Realisation"), alpha = 0.75, data = data_all) +
  geom_line(aes(x=Time,y=Count, colour = "Mean value"), data = data_mean, linetype = 'solid', linewidth = 2) +
  scale_y_continuous(xxtitle, breaks = breaks_pretty(), limits = ylimits) +
  scale_x_continuous(yytitle, breaks = breaks_pretty(), limits = c(0,10)) +
  scale_colour_manual("", values = c("#117733","#CC6677"), labels = c(paste0("E[",expression(N(t)),"]"), expression(N(t)))) +
  theme_bw() +
  theme (text = element_text (size = 18))

allplot

```

## Properties of Poisson processes

::: {.callout-tip}
## Property 1 (PPP1)

$N(t) \sim \text{Pois}(\lambda t)$ for fixed $t > 0$
:::

- What about the expectation $E[N(t)]$?


## Visualising the Poisson process

```{r}
#| label: PPvalue2
#| layout: "[1, 1]"
#| echo: false
#| fig-dpi: !expr 'figdpi'
#| fig-asp: 1
#| fig-cap: ""
#| fig-subcap: 
#|   - "Process mean and realisations"
#|   - "Distribution at time t=2"

intercept <- 2
distr <- paste0("pois(",intercept*rate,")")

allplot + 
  geom_segment(aes(x=intercept,y=0,xend=intercept,yend=intercept*rate), linetype = 'longdash', linewidth = 1.5) + 
  geom_segment(aes(x=intercept,y=intercept*rate,xend=total_time,yend=intercept*rate), linetype = 'longdash', linewidth = 1.8) + 
  theme(text = element_text (size = 22), legend.position = 'none')

ggplot(parse_dist(distr)) + stat_histinterval(aes(dist = .dist_obj, slab_colour = "black"), point_interval = 'mean_qi', fill = "grey", slab_colour = "black", outline_bars = TRUE) + 
  scale_x_continuous("Probability") +
  scale_y_continuous("", limits = ylimits) + 
  theme_bw() + theme (text = element_text (size = 22), legend.position = 'none')

```

Distribution at time t

## Visualising the Poisson process

```{r}
#| label: PPvalue4
#| layout: "[1, 1]"
#| echo: false
#| fig-asp: 1
#| fig-cap: ""
#| fig-subcap: 
#|   - "Process mean and realisations"
#|   - "Distribution at time t=4"

intercept <- 4
distr <- paste0("pois(",intercept*rate,")")

allplot + 
  geom_segment(aes(x=intercept,y=0,xend=intercept,yend=intercept*rate), linetype = 'longdash', linewidth = 1.8) + 
  geom_segment(aes(x=intercept,y=intercept*rate,xend=total_time,yend=intercept*rate), linetype = 'longdash', linewidth = 1.8) + 
  theme(text = element_text (size = 22), legend.position = 'none')

ggplot(parse_dist(distr)) + stat_histinterval(aes(dist = .dist_obj, slab_colour = "black"), point_interval = 'mean_qi', fill = "grey", slab_colour = "black", outline_bars = TRUE) + 
  scale_x_continuous("Probability") +
  scale_y_continuous("", limits = ylimits) + 
  theme_bw() + theme (text = element_text (size = 22), legend.position = 'none')

```

## Visualising the Poisson process

```{r}
#| label: PPvalue6
#| layout: "[1, 1]"
#| echo: false
#| fig-asp: 1
#| fig-cap: ""
#| fig-subcap: 
#|   - "Process mean and realisations"
#|   - "Distribution at time t=6"

intercept <- 6
distr <- paste0("pois(",intercept*rate,")")

allplot + 
  geom_segment(aes(x=intercept,y=0,xend=intercept,yend=intercept*rate), linetype = 'longdash', linewidth = 1.8) + 
  geom_segment(aes(x=intercept,y=intercept*rate,xend=total_time,yend=intercept*rate), linetype = 'longdash', linewidth = 1.8) + 
  theme(text = element_text (size = 22), legend.position = 'none')

ggplot(parse_dist(distr)) + stat_histinterval(aes(dist = .dist_obj, slab_colour = "black"), point_interval = 'mean_qi', fill = "grey", slab_colour = "black", outline_bars = TRUE) + 
  scale_x_continuous("Probability") +
  scale_y_continuous("", limits = ylimits) + 
  theme_bw() + theme (text = element_text (size = 22), legend.position = 'none')

```

## Visualising the Poisson process

```{r}
#| label: PPvalue8
#| layout: "[1, 1]"
#| echo: false
#| fig-dpi: !expr 'figdpi'
#| fig-asp: 1
#| fig-cap: ""
#| fig-subcap: 
#|   - "Process mean and realisations"
#|   - "Distribution at time t=8"
 
intercept <- 8
distr <- paste0("pois(",intercept*rate,")")

allplot + 
  geom_segment(aes(x=intercept,y=0,xend=intercept,yend=intercept*rate), linetype = 'longdash', linewidth = 1.8) + 
  geom_segment(aes(x=intercept,y=intercept*rate,xend=total_time,yend=intercept*rate), linetype = 'longdash', linewidth = 1.8) + 
  theme(text = element_text (size = 22), legend.position = 'none')

ggplot(parse_dist(distr)) + stat_histinterval(aes(dist = .dist_obj, slab_colour = "black"), point_interval = 'mean_qi', fill = "grey", slab_colour = "black", outline_bars = TRUE) + 
  scale_x_continuous("Probability") +
  scale_y_continuous("", limits = ylimits) + 
  theme_bw() + theme (text = element_text (size = 22), legend.position = 'none')

```


## Arrival times

```{r diagram, engine = 'tikz'}
\begin{tikzpicture}

\draw[->] (0.5,0) -- (7,0) node[right] {Time};


\foreach \x in {0.5, 1.8, 3.3, 4.6, 6.0} {
    \draw[fill=black] (\x, 0) circle (2pt); % Arrival points
}


\draw[<->] (0.5, 0.4) -- (1.8, 0.4) node[midway, above] {$X_1$};
\draw[<->] (1.8, 0.4) -- (3.3, 0.4) node[midway, above] {$X_2$};
\draw[<->] (3.3, 0.4) -- (4.6, 0.4) node[midway, above] {$X_3$};
\draw[<->] (4.6, 0.4) -- (6.0, 0.4) node[midway, above] {$X_4$};


\node[below] at (0.5, 0) {$0$};
\node[below] at (1.8, 0) {$T_1$};
\node[below] at (3.3, 0) {$T_2$};
\node[below] at (4.6, 0) {$T_3$};
\node[below] at (6.0, 0) {$T_4$};

\end{tikzpicture}
```

::: {.callout-note}
## Arrival time

$T_i =$ Time of $i$th arrival, for $i \in \{1,2,\ldots\}$

:::

::: {.callout-note}
## Interarrival time

$X_{i} =$ Time between $(i-1)$th and $i$th arrival, for $i \in \{1,2,\ldots\}$

$X_{i} = T_{i} - T_{i-1}$, $T_0=0$
:::

<!--- Should I fill in the last property manually? --->

## Properties of Poisson processes

::: {.callout-tip}
## Property 2 (PPP2)

$\mathbb{P}(N(s_2 + t_2)-N(s_2) = k_2 \mid N(s_1 + t_1)-N(s_1) = k_1) = p_{\lambda t_2}(k_2)$ 

for $s_1 < s_1 + t_1 \leq s_2 < s_2 + t_2$, $t_1,t_2>0$ and $k_1,k_2 \in \mathbb{N}_0$.
:::

::: {.callout-tip}
## Property 3 (PPP3)

The interarrival times $X_i \sim \text{Exp}(\lambda)$, for $i \in \{1,2,\ldots\}$
:::
# Activity 1

## Quiz

State which elements of the Poisson Process definition are required for each property:

::: {.callout-tip}
## Property 1

$N(t) \sim \text{Pois}(\lambda t)$ for fixed $t>0$.
:::

a. $N(0)=0$,
b. Independent increments
c. Number of arrivals in $[s,s+t]$ is $\text{Pois}(\lambda t)$

## Quiz

State which elements of the Poisson Process definition are required for each property:

::: {.callout-tip}
## Property 2

$\mathbb{P}(N(s_2 + t_2)-N(s_2) = k_2 \mid N(s_1 + t_1)-N(s_1) = k_1) = p_{\lambda t_2}(k_2)$ 

for $0\leq s_1 < s_1 + t_1 \leq s_2 < s_2 + t_2$, and $k_1,k_2 \in \mathbb{N}_0$.
:::

a. $N(0)=0$,
b. Independent increments
c. Number of arrivals in $[s,s+t]$ is $\text{Pois}(\lambda t)$
  
<!--- Discuss with partner. 1 a/c, 2 b/c --->


# Demonstration 1

## Extra tools

::: callout-note
## Exponential distribution

The random variable $X \in \mathbb{R}_{+}$ is called an exponential random variable

with rate $\theta > 0$ if

$$
\mathbb{P}(X > x) = p_\(k) =\frac{\lambda^{k}e^{-\lambda}}{k!}, \quad k \in \mathbb{N}_0.
$$

We also say $X \sim \text{Pois}(\lambda)$ for short.
:::

Law of total probability

## Proof of interarrival times property

::: {.callout-tip}
## Property 3

The interarrival times $X_i \sim \text{Exp}(\lambda)$, for $i \in \{1,2,\ldots\}$
:::

::: {.fragment}

For times $s,t > 0$ and arrival index $i \in \{1,2,\ldots\}$ consider 

$$\mathbb{P}(X_{i} > t \mid T_{i-1} = s)$$
:::


## Proof of interarrival times property

$\mathbb{P}(X_{i} > t \mid T_{i-1} = s)$


::: {.fragment}
$= \mathbb{P}(T_{i} - T_{i-1}  > t \mid T_{i-1} = s)$
:::

::: {.fragment}
$= \mathbb{P}(T_{i} > s+t \mid T_{i-1} = s)$
:::

::: {.fragment}
$= \mathbb{P}(N(s+t) - N(s) = 0  \mid N(s) - N(0) = i-1)$
:::

::: {.fragment}
$= p_{\lambda t}(0) = e^{-\lambda t}$
:::

## Proof of interarrival times property

Now consider $\mathbb{P}(X_{i} > t)$

::: {.fragment}
$= \mathbb{E}[\mathbb{P}(X_{i} > t \mid T_{i-1}=S)]$
:::

::: {.fragment}
$= \mathbb{E}[e^{-\lambda t}] = e^{-\lambda t}$
:::

::: {.fragment}
We can then recognise that $X_i \sim \text{Exp}(\lambda)$.
:::

<!--- Property 2 --->

## Interarrival times: Strategy review



# History

## SimÃ©on Denis Poisson

::::::: columns
::::: {.column width="60%"}
::: {.fragment .fade-out}
Â«La vie nâest bonne quâÃ  deux choses: Ã  faire des mathÃ©matiques et Ã  les professerÂ»
:::

::: fragment
"Life is only good for two things: doing mathematics and teaching it"
:::
:::::

::: {.column width="40%"}
![SimÃ©on Denis Poisson](imgs/poisson.jpg){fig-align="right"}
:::
:::::::

## Historical examples[^1]

[^1]: See @stirzaker2000advice for more details

Poisson did not use or discover the Poisson process!

-   Delays and congestion in telephone systems (1909)

-   Number of $\alpha$-particles detected by Geiger count (1910)

-   Adopted quickly in: biology, ecology, engineering, physics

# More

## Lines, damned lines, and queuing

## References

::: {#refs}
:::
